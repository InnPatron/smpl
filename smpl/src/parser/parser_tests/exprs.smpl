mod mod1;

fn f1() {
    1 + 2;

    foo(1);
}

fn f2() {
    foo(1, 2, 3,);

    bar(1, 2, 3);
}

fn f3() {
    foo({
        extract 1;
    }, 2, {
        extract 3;
    },);

    bar({
        extract 1;
    }, 2, {
        extract 3;
    },);
}

fn f4() {
    mod2::inner1::foo({
        extract 1;
    }, 2, {
        extract 3;
    },);

    mod3::bar({
        extract 1;
    }, 2, {
        extract 3;
    },);
}

fn f5() {
    init mod3::Foo {
        x: 50,
        y: {
            let x = 5;
            extract x;
        },
    };
}

fn f6() {
    init [1, 2, ; 5];
    init [1, 2; 5];
}

fn f7() {
    init [7; 10];
}

fn f8() {
    init [12, 14, 16, 17];
}

fn f8() {
    let zzz = mod8::function(type awesome, sause)(12 + 321).field1[5 + 6].field2;
}
